{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\nvar base = require( '@stdlib/string-base-dotcase' );\n\n\n// MAIN //\n\n/**\n* Converts a string to dot case.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} dot-cased string\n*\n* @example\n* var out = dotcase( 'foo bar' );\n* // returns 'foo.bar'\n*\n* @example\n* var out = dotcase( 'IS_MOBILE' );\n* // returns 'is.mobile'\n*\n* @example\n* var out = dotcase( 'Hello World!' );\n* // returns 'hello.world'\n*\n* @example\n* var out = dotcase( '--foo-bar--' );\n* // returns 'foo.bar'\n*/\nfunction dotcase( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = dotcase;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Convert a string to dot case.\n*\n* @module @stdlib/string-dotcase\n*\n* @example\n* var dotcase = require( '@stdlib/string-dotcase' );\n*\n* var str = dotcase( 'foo bar' );\n* // returns 'foo.bar'\n*\n* str = dotcase( '--foo-bar--' );\n* // returns 'foo.bar'\n*\n* str = dotcase( 'Hello World!' );\n* // returns 'hello.world'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAS,QAAS,uBAAwB,EAC1CC,EAAO,QAAS,6BAA8B,EA4BlD,SAASC,EAASC,EAAM,CACvB,GAAK,CAACJ,EAAUI,CAAI,EACnB,MAAM,IAAI,UAAWH,EAAQ,kEAAmEG,CAAI,CAAE,EAEvG,OAAOF,EAAME,CAAI,CAClB,CAKAL,EAAO,QAAUI,ICtBjB,IAAIE,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isString", "format", "base", "dotcase", "str", "main"]
}
